# Bottom Up Approach

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def traverse(self,root):

        if root:
            left = max(self.traverse(root.left),0)
            right = max(self.traverse(root.right),0)
            self.ans= max(self.ans,root.val+left+right)
            
            return max(left,right)+root.val
        else:
            return 0
       
          
    def maxPathSum(self, root: Optional[TreeNode]) -> int:
        self.ans = -99999999
        data = self.traverse(root)
        return self.ans
