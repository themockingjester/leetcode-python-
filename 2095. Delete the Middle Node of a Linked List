# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def deleteMiddle(self, head: Optional[ListNode]) -> Optional[ListNode]:
        lst = []
        node= head
        dic = {}
        cnt=0
        while node:
            lst.append(node.val)
            dic[cnt]=node
            node = node.next
            cnt+=1
        
        if len(lst)==1:
            return None
        prev = dic[len(lst)//2-1]
        curr = dic[len(lst)//2]
        prev.next = curr.next
        return head

        
